(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{107:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return i})),t.d(n,"default",(function(){return f}));var r=t(2),o=t(6),a=(t(0),t(122)),c={id:"user-info",title:"User Info",sidebar_label:"User Info"},s={id:"user-info",title:"User Info",description:"TODO: Describe the queueing system",source:"@site/docs/user-info.md",permalink:"/react-native-watch-connectivity/docs/user-info",editUrl:"https://github.com/mtford90/react-native-watch-connectivity.github.io/edit/master/docs/user-info.md",sidebar_label:"User Info",sidebar:"someSidebar",previous:{title:"Messages",permalink:"/react-native-watch-connectivity/docs/messages"},next:{title:"Application Context",permalink:"/react-native-watch-connectivity/docs/application-context"}},i=[{value:"transferUserInfo",id:"transferuserinfo",children:[]},{value:"transferCurrentComplicationUserInfo",id:"transfercurrentcomplicationuserinfo",children:[]},{value:"getQueuedUserInfo",id:"getqueueduserinfo",children:[{value:"TypeScript support",id:"typescript-support",children:[]}]},{value:"clearUserInfoQueue",id:"clearuserinfoqueue",children:[]},{value:"dequeueUserInfo",id:"dequeueuserinfo",children:[]},{value:"subscribeToUserInfo",id:"subscribetouserinfo",children:[]}],u={rightToc:i};function f(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"TODO: Describe the queueing system"),Object(a.b)("p",null,"Typical workflow:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),'import { \n  dequeueUserInfo, \n  getQueuedUserInfo, \n  subscribeToUserInfo \n} from "react-native-watch-connectivity"\n\nfunction processUserInfo(id, userInfo) {\n  consumeUserInfo(userInfo);\n  dequeueUserInfo(id); // Mark user info as consumed\n}\n\ngetQueuedUserInfo().then(queuedUserInfo => {\n  // Consume user info sent by the watch whilst the app has been closed\n  queuedUserInfo.forEach(({userInfo, id}) => {\n    processUserInfo(id, userInfo);\n  })\n\n  // Deal with any user info sent whilst the app is open\n  subscribeToUserInfo(({userInfo, id}) => {\n    processUserInfo(id, userInfo);\n  })\n})\n')),Object(a.b)("h2",{id:"transferuserinfo"},"transferUserInfo"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),'import { transferUserInfo } from "react-native-watch-connectivity"\n\ntransferUserInfo({key: "value"})\n')),Object(a.b)("h2",{id:"transfercurrentcomplicationuserinfo"},"transferCurrentComplicationUserInfo"),Object(a.b)("p",null,"Same as transferUserInfo but receives priority. Generally used to update information with complications presented on the watch face."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),'import { transferCurrentComplicationUserInfo } from "react-native-watch-connectivity"\n\ntransferCurrentComplicationUserInfo({key: "value"})\n')),Object(a.b)("h2",{id:"getqueueduserinfo"},"getQueuedUserInfo"),Object(a.b)("p",null,"Returns all unprocessed user info received by the Watch, including all user info messages received whilst the companion app is closed. "),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),'import { getQueuedUserInfo } from "react-native-watch-connectivity"\n\nconst queue = await getQueuedUserInfo();\n\nqueue.forEach(({userInfo, timestamp, id}) => {\n  console.log(userInfo);\n})\n')),Object(a.b)("h3",{id:"typescript-support"},"TypeScript support"),Object(a.b)("p",null,"It's possible to type the user info expected by companion app."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),'import { getQueuedUserInfo } from "react-native-watch-connectivity"\n\ntype MyUserInfo = {key: string}\n\nconst queue = await getQueuedUserInfo<MyUserInfo>();\n\nqueue.forEach(({userInfo}) => {\n  console.log(userInfo.key);\n})\n')),Object(a.b)("h2",{id:"clearuserinfoqueue"},"clearUserInfoQueue"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),'import { clearUserInfoQueue } from "react-native-watch-connectivity"\n\nawait clearUserInfoQueue();\n')),Object(a.b)("h2",{id:"dequeueuserinfo"},"dequeueUserInfo"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),'import { getQueuedUserInfo, dequeueUserInfo } from "react-native-watch-connectivity"\n\nconst queue = await getQueuedUserInfo();\n\nqueue.forEach(({userInfo, timestamp, id}) => {\n  consumeUserInfo(userInfo);\n  dequeueUserInfo(id); \n})\n')),Object(a.b)("h2",{id:"subscribetouserinfo"},"subscribeToUserInfo"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),'import { \n  subscribeToUserInfo\n} from "react-native-watch-connectivity"\n\nsubscribeToUserInfo(({userInfo, timestamp, id}) => {\n  // ...\n})\n')))}f.isMDXComponent=!0},122:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return d}));var r=t(0),o=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=o.a.createContext({}),f=function(e){var n=o.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=f(e.components);return o.a.createElement(u.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},b=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=f(t),b=r,d=p["".concat(c,".").concat(b)]||p[b]||l[b]||a;return t?o.a.createElement(d,s(s({ref:n},u),{},{components:t})):o.a.createElement(d,s({ref:n},u))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,c=new Array(a);c[0]=b;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,c[1]=s;for(var u=2;u<a;u++)c[u]=t[u];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);